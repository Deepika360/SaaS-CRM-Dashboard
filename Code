<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SaaS CRM Dashboard</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js"></script>
    <link rel="stylesheet" href="https://kit.fontawesome.com/1238b08d4a.js" crossorigin="anonymous">
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #87CEEB;
        }
        .nav {
            background-color: rgba(0, 0, 0, 0.5);
            color: #fff;
            padding: 10px;
            text-align: center;
        }
        .nav a {
            color: #fff;
            text-decoration: none;
            margin: 0 10px;
        }
        .nav a:hover {
            color: #ccc;
        }
        .home-screen {
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 20px;
            background-color: rgba(255, 255, 255, 0.8);
            border: 1px solid #ddd;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            border-radius: 10px;
        }
        .sales-analytics {
            padding: 20px;
            background-color: rgba(255, 255, 255, 0.8);
            border: 1px solid #ddd;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            border-radius: 10px;
        }
        .calendar-monthly {
            padding: 20px;
            background-color: rgba(255, 255, 255, 0.8);
            border: 1px solid #ddd;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            border-radius: 10px;
        }
        .tasks {
            padding: 20px;
            background-color: rgba(255, 255, 255, 0.8);
            border: 1px solid #ddd;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            border-radius: 10px;
        }
        .login-page {
            padding: 20px;
            background-color: rgba(255, 255, 255, 0.8);
            border: 1px solid #ddd;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            border-radius: 10px;
        }
        .climate-icon {
            font-size: 24px;
            color: #337ab7;
        }
        .calendar-container {
            padding: 20px;
        }
        .calendar-button {
            background-color: #4CAF50;
            color: #fff;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        .calendar-button:hover {
            background-color: #3e8e41;
        }
    </style>
</head>
<body>
    <div class="nav">
        <a href="#home">Home</a>
        <a href="#sales-analytics">Sales Analytics</a>
        <a href="#calendar-monthly">Calendar Monthly</a>
        <a href="#tasks">Tasks</a>
        <a href="#login-page">Login</a>
    </div>
    <div class="container mt-5">
        <div id="home" class="home-screen">
            <h1><i class="fas fa-sun climate-icon"></i> Welcome to SaaS CRM Dashboard</h1>
            <p>This is the home screen of the SaaS CRM Dashboard.</p>
        </div>
        <div id="sales-analytics" class="sales-analytics mt-5">
            <h1><i class="fas fa-chart-line climate-icon"></i> Sales Analytics</h1>
            <div class="row">
                <div class="col-md-12">
                    <canvas id="sales-chart"></canvas>
                </div>
            </div>
            <!-- Modal -->
            <div class="modal fade" id="salesModal" tabindex="-1" aria-labelledby="salesModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="salesModalLabel">Sales Information</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <p id="sales-month"></p>
                            <p id="sales-amount"></p>
                            <p id="revenue-amount"></p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="calendar-monthly" class="calendar-monthly mt-5">
            <div class="row">
                <div class="col-md-12">
                    <h1>Calendar Monthly</h1>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12" style="display: flex; justify-content: space-between; align-items: center;">
                    <button type="button" class="calendar-button" onclick="prevMonth()"><i class="fas fa-arrow-left"></i> Previous</button>
                    <h3 id="month-year"></h3>
                    <button type="button" class="calendar-button" onclick="nextMonth()">Next <i class="fas fa-arrow-right"></i></button>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 calendar-container">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Sun</th>
                                <th>Mon</th>
                                <th>Tue</th>
                                <th>Wed</th>
                                <th>Thu</th>
                                <th>Fri</th>
                                <th>Sat</th>
                            </tr>
                        </thead>
                        <tbody id="calendar-body">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div id="tasks" class="tasks mt-5">
            <h1><i class="fas fa-tasks climate-icon"></i> Tasks</h1>
            <ul class="list-group" id="taskList">
                <li class="list-group-item">Task 1</li>
                <li class="list-group-item">Task 2</li>
                <li class="list-group-item">Task 3</li>
            </ul>
            <form>
                <div class="form-group">
                    <label for="taskName">Task Name:</label>
                    <input type="text" id="taskName" class="form-control">
                </div>
                <button type="button" class="btn btn-primary" onclick="addTask()">Add Task</button>
            </form>
        </div>
        <div id="login-page" class="login-page mt-5">
            <h1><i class="fas fa-lock climate-icon"></i> Login Page</h1>
            <form>
                <div class="form-group">
                    <label for="username">Username:</label>
                    <input type="text" id="username" class="form-control">
                </div>
                <div class="form-group">
                    <label for="password">Password:</label>
                    <input type="password" id="password" class="form-control">
                </div>
                <button type="button" class="btn btn-primary" onclick="login()">Login</button>
            </form>
            <div id="loginStatus"></div>
        </div>
    </div>
    <script>
        let currentMonth = new Date().getMonth();
        let currentYear = new Date().getFullYear();
        function getDaysInMonth(month, year) {
            return new Date(year, month + 1, 0).getDate();
        }
        function getDayOfWeek(month, year) {
            return new Date(year, month, 1).getDay();
        }
        function createCalendar() {
            let monthYear = document.getElementById("month-year");
            monthYear.innerText = getMonthName(currentMonth) + " " + currentYear;
            let calendarBody = document.getElementById("calendar-body");
            calendarBody.innerHTML = "";
            let daysInMonth = getDaysInMonth(currentMonth, currentYear);
            let dayOfWeek = getDayOfWeek(currentMonth, currentYear);
            let row = document.createElement("tr");
            for (let i = 0; i < dayOfWeek; i++) {
                let cell = document.createElement("td");
                row.appendChild(cell);
            }
            for (let i = 1; i <= daysInMonth; i++) {
                let cell = document.createElement("td");
                cell.innerText = i;
                if(i === 15 || i === 25) { 
                    cell.style.backgroundColor = "blue";
                    cell.style.color = "white";
                }
                row.appendChild(cell);
                if ((i + dayOfWeek) % 7 == 0) {
                    calendarBody.appendChild(row);
                    row = document.createElement("tr");
                }
            }
            while (row.children.length < 7) {
                let cell = document.createElement("td");
                row.appendChild(cell);
            }
            calendarBody.appendChild(row);
        }
        function prevMonth() {
            if (currentMonth == 0) {
                currentMonth = 11;
                currentYear--;
            } else {
                currentMonth--;
            }
            createCalendar();
        }
        function nextMonth() {
            if (currentMonth == 11) {
                currentMonth = 0;
                currentYear++;
            } else {
                currentMonth++;
            }
            createCalendar();
        }
        function getMonthName(month) {
            let monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
            return monthNames[month];
        }
        createCalendar();
        function addTask() {
            let taskName = document.getElementById("taskName").value;
            let taskList = document.getElementById("taskList");
            let newTask = document.createElement("LI");
            newTask.className = "list-group-item";
            newTask.textContent = taskName;
            taskList.appendChild(newTask);
            document.getElementById("taskName").value = "";
        }
        function login() {
            let username = document.getElementById("username").value;
            let password = document.getElementById("password").value;
            if (username === "admin" && password === "password") {
                document.getElementById("loginStatus").innerHTML = "Login successful!";
            } else {
                document.getElementById("loginStatus").innerHTML = "Invalid username or password.";
            }
        }
        const salesChart = document.getElementById("sales-chart").getContext("2d");
        const salesData = {
            labels: ["January", "February", "March", "April", "May"],
            datasets: [
                {
                    label: "Sales",
                    data: [100, 200, 300, 400, 500],
                    backgroundColor: 'rgba(255, 99, 132, 0.8)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1,
                    borderRadius: 5,
                    borderSkipped: false,
                },
                {
                    label: "Revenue",
                    data: [1000, 2000, 3000, 4000, 5000],
                    backgroundColor: 'rgba(54, 162, 235, 0.8)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1,
                    borderRadius: 5,
                    borderSkipped: false,
                }
            ]
        };
        const salesOptions = {
            scales: {
                y: {
                    beginAtZero: true,
                    grid: {
                        drawTicks: false,
                        drawBorder: false,
                        display: false
                    }
                },
                x: {
                    grid: {
                        drawTicks: false,
                        drawBorder: false,
                        display: false
                    }
                }
            },
            plugins: {
                legend: {
                    display: true
                },
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            let label = context.dataset.label || '';
                            if (label) {
                                label += ': ';
                            }
                            if (context.parsed.y !== null) {
                                label += context.parsed.y + ' units';
                            }
                            return label;
                        }
                    }
                }
            },
            onClick: (event, elements) => {
                if (elements.length > 0) {
                    let modal = new bootstrap.Modal(document.getElementById('salesModal'));
                    let salesMonth = document.getElementById("sales-month");
                    let salesAmount = document.getElementById("sales-amount");
                    let revenueAmount = document.getElementById("revenue-amount");
                    let salesIndex = elements[0].datasetIndex;
                    let salesDataset = salesData.datasets[salesIndex];
                    salesMonth.innerText = salesData.labels[elements[0].index];
                    salesAmount.innerText = "Sales: " + salesDataset.data[elements[0].index] + ' units';
                    if(salesIndex === 0) {
                        revenueAmount.innerText = "Revenue: " + salesData.datasets[1].data[elements[0].index] + ' units';
                    } else {
                        revenueAmount.innerText = "Sales: " + salesData.datasets[0].data[elements[0].index] + ' units';
                    }
                    modal.show();
                }
            }
        };
        const salesChartObj = new Chart(salesChart, {
            type: "bar",
            data: salesData,
            options: salesOptions
        });
    </script>
</body>
</html>
